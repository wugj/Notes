检测工具： MAT(Memory Analyzer Tool)  LeakCanary

1、过度绘制，减少层级
  a、减少不可见UI对绘制
  b、约束性布局， linearLayout frameLayout 优先 相对布局
  c、viewStub merg include
  d、ondraw 不要创建对象， 耗时操作

2、图片优先使用shape， webp ，图片tinypin

3、viewholder
4、不要过度使用枚举，枚举占用的内存空间要比整型大
5、适当采用软引用和弱引用
6、优先静态内部类，匿名内部类会持有当前对象
7、优先使用安卓提供对类 SparseIntArray
8、资源关闭 io 之类
9、注册，反注册， 广播
10、webview 
11、取消动画
12、图片框架

电池优化 
  1、减少不必要对绘制 刷新
  2、减少动画
  3、job Scheduling 推迟执行
  4、缓存数据
  5、心跳
  6、频繁读写操作

代码混淆。使用proGuard 代码混淆器工具，它包括压缩、优化、混淆等功能。
资源优化。比如使用 Android Lint 删除冗余资源，资源文件最少化等。
图片优化。比如利用 AAPT 工具对 PNG 格式的图片做压缩处理，降低图片色彩位数等。
减少不必要对so库

2.1.2内存回收机制
年轻代、老年代、持久代。

年轻代
所有新生成的对象都放在年轻代。

年轻代分为一个Eden区和两个Survivor区。

GC时，当Eden区满时，还存活的对象会被复制到其中一个Survivor区（A）。

当这个Survivor区（A）也满时，就会被复制到另一个Survivor区（B）。

当Survivor区（B）也满时，从第一个Survivor（B）复制过来并且还存活的对象，就会被复制到老年代。

老年代
在年轻代经历了N次垃圾回收仍然存活的到对象，就被放到老年代。

持久代
主要存放静态文件，比如Java类，方法等。

持久代对垃圾回收没有明显影响。
