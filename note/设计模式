1、单例： 系统服务 ams wms， layoutinflater（容器缓存）， 饥汉，懒汉， 静态内部类，枚举，容器缓存 全局唯一
2、建造者（builder）： dialog  参数配置
3、原型模式： 拷贝  class.clone()  flutter的 fish redex  state状态管理  intent.clone()
4、工厂模式： 获取系统服务 ams wms   消息， cms， 素材
5、策略者： 封装算法， 比如排序，  动画里的差值器，  算法抽象类AbstractAlgorithm，其中有个sort()方法，底层去自己实现， 例如 cms 素材中解析各种素材的content内容
6、状态机： wifi管理模块
7、责任链： view的点击
8、解释器模式： 定义结构解析， 比如 packagemanagerserver 解析AndroidManifest
9、命令模式： 将一租命令封装对象，放入队列中 支持撤销
10、 观察者模式：  列表的notifyDataSetChanged， livedata
11、备忘录模式： 不破坏封闭的条件下，保存对象内的状态， activity的 onSaveInstanceState 和 onreStroInstanceState
12、迭代器模式： 顺序访问容器内的元素，  集合的Iterator  
13、模板方法模式：  activity oncreate  onstart
14、访问者：  apt 注解
15、中介者模式
16、代理模式： 静态代理 百度的插件化方案， 动态代理
17、组合模式
18、适配器：  adapter
19、装饰者： context是抽象类，整整的contextimpl  activity继承contextWrapper  contextWrapper持有contextImpl，在实现context的方法中调用了contextimpl
20、享元： 线程池， String池， message.obtain
21、外观模式： 一个统一的接口对外提供服务,使得外部程序只通过一个类就可以实现系统内部的多种功能  context的startactivity  
22、桥接： listvew 中getview  getcount   adapter.getview  桥接
